openapi: 3.0.1
info:
  title: 规范化接口演示
  description: 让 .NET 开发更简单，更通用，更流行。
  termsOfService: http://furion.baiqian.ltd
  contact:
    name: 百小僧
    url: https://gitee.com/monksoul
    email: monksoul@outlook.com
  license:
    name: Apache-2.0
    url: https://gitee.com/dotnetchina/Furion/blob/rc1/LICENSE
  version: 1.0.0
paths:
  /api/init-system/init-data-base:
    post:
      tags:
        - init-system
      operationId: api-init-system-init-data-base-Post
      responses:
        '200':
          description: Success
  /api/unit/units:
    get:
      tags:
        - unit
      summary: Retrieves a paginated list of units based on the provided parameters.
      operationId: api-unit-units-Get
      parameters:
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_UnitDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_UnitDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_UnitDto'
  /api/unit/unit/{id}:
    put:
      tags:
        - unit
      summary: Updates a unit with the specified ID using the provided DTO.
      operationId: api-unit-unit-id-Put
      parameters:
        - name: id
          in: path
          description: The ID of the unit to update.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: The DTO containing the updated unit information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUnitDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUnitDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUnitDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/UpdateUnitDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - unit
      summary: Deletes a unit with the specified ID.
      operationId: api-unit-unit-id-Delete
      parameters:
        - name: id
          in: path
          description: The ID of the unit to delete.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
    get:
      tags:
        - unit
      summary: Retrieves a unit with the specified ID.
      operationId: api-unit-unit-id-Get
      parameters:
        - name: id
          in: path
          description: The ID of the unit to retrieve.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UnitDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UnitDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UnitDto'
  /api/unit/unit:
    post:
      tags:
        - unit
      summary: Creates a new unit using the provided DTO.
      operationId: api-unit-unit-Post
      requestBody:
        description: The DTO containing the unit information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUnitDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUnitDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUnitDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateUnitDto'
      responses:
        '200':
          description: Success
  /api/unit/download-unit-pdf/{userid}:
    post:
      tags:
        - unit
      summary: Downloads a PDF file containing information about all units.
      operationId: api-unit-download-unit-pdf-userid-Post
      parameters:
        - name: userid
          in: path
          description: The ID of the user initiating the download.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
  /api/unit/download-unit-excel:
    post:
      tags:
        - unit
      summary: Downloads an Excel file containing information about all units.
      operationId: api-unit-download-unit-excel-Post
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
  /api/tax/taxs:
    get:
      tags:
        - tax
      operationId: api-tax-taxs-Get
      parameters:
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_TaxSimpleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_TaxSimpleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_TaxSimpleDto'
  /api/tax/tax:
    post:
      tags:
        - tax
      operationId: api-tax-tax-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaxDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTaxDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTaxDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateTaxDto'
      responses:
        '200':
          description: Success
  /api/tax/tax/{id}:
    put:
      tags:
        - tax
      operationId: api-tax-tax-id-Put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaxDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTaxDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateTaxDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/UpdateTaxDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - tax
      operationId: api-tax-tax-id-Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
    get:
      tags:
        - tax
      operationId: api-tax-tax-id-Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_TaxSimpleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_TaxSimpleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_TaxSimpleDto'
  /api/tax/download-tax-pdf/{userid}:
    post:
      tags:
        - tax
      operationId: api-tax-download-tax-pdf-userid-Post
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
  /api/tax/download-tax-excel:
    post:
      tags:
        - tax
      operationId: api-tax-download-tax-excel-Post
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
  /api/system/description:
    get:
      tags:
        - system
      summary: 获取系统描述
      operationId: api-system-description-Get
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_String'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_String'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_String'
  /api/supplier/suppliers-for-grid:
    get:
      tags:
        - supplier
      operationId: api-supplier-suppliers-for-grid-Get
      parameters:
        - name: RequireTotalCount
          in: query
          schema:
            type: boolean
        - name: RequireGroupCount
          in: query
          schema:
            type: boolean
        - name: IsCountQuery
          in: query
          schema:
            type: boolean
        - name: IsSummaryQuery
          in: query
          schema:
            type: boolean
        - name: Skip
          in: query
          schema:
            type: integer
            format: int32
        - name: Take
          in: query
          schema:
            type: integer
            format: int32
        - name: Sort
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortingInfo'
        - name: Group
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GroupingInfo'
        - name: Filter
          in: query
          schema:
            type: array
            items:
              additionalProperties: false
        - name: TotalSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: GroupSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: Select
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PreSelect
          in: query
          schema:
            type: array
            items:
              type: string
        - name: RemoteSelect
          in: query
          schema:
            type: boolean
        - name: RemoteGrouping
          in: query
          schema:
            type: boolean
        - name: ExpandLinqSumType
          in: query
          schema:
            type: boolean
        - name: PrimaryKey
          in: query
          schema:
            type: array
            items:
              type: string
        - name: DefaultSort
          in: query
          schema:
            type: string
        - name: StringToLower
          in: query
          schema:
            type: boolean
        - name: PaginateViaPrimaryKey
          in: query
          schema:
            type: boolean
        - name: SortByPrimaryKey
          in: query
          schema:
            type: boolean
        - name: AllowAsyncOverSync
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
  /api/supplier/suppliers:
    get:
      tags:
        - supplier
      operationId: api-supplier-suppliers-Get
      parameters:
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_SupplierDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_SupplierDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_SupplierDto'
  /api/supplier/supplier:
    post:
      tags:
        - supplier
      operationId: api-supplier-supplier-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSupplierDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSupplierDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSupplierDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateSupplierDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
  /api/supplier/supplier/{id}:
    put:
      tags:
        - supplier
      operationId: api-supplier-supplier-id-Put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSupplierDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSupplierDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSupplierDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/UpdateSupplierDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
    delete:
      tags:
        - supplier
      operationId: api-supplier-supplier-id-Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
    get:
      tags:
        - supplier
      operationId: api-supplier-supplier-id-Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SupplierDto'
  /api/sale/sales-for-grid:
    get:
      tags:
        - sale
      operationId: api-sale-sales-for-grid-Get
      parameters:
        - name: RequireTotalCount
          in: query
          schema:
            type: boolean
        - name: RequireGroupCount
          in: query
          schema:
            type: boolean
        - name: IsCountQuery
          in: query
          schema:
            type: boolean
        - name: IsSummaryQuery
          in: query
          schema:
            type: boolean
        - name: Skip
          in: query
          schema:
            type: integer
            format: int32
        - name: Take
          in: query
          schema:
            type: integer
            format: int32
        - name: Sort
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortingInfo'
        - name: Group
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GroupingInfo'
        - name: Filter
          in: query
          schema:
            type: array
            items:
              additionalProperties: false
        - name: TotalSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: GroupSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: Select
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PreSelect
          in: query
          schema:
            type: array
            items:
              type: string
        - name: RemoteSelect
          in: query
          schema:
            type: boolean
        - name: RemoteGrouping
          in: query
          schema:
            type: boolean
        - name: ExpandLinqSumType
          in: query
          schema:
            type: boolean
        - name: PrimaryKey
          in: query
          schema:
            type: array
            items:
              type: string
        - name: DefaultSort
          in: query
          schema:
            type: string
        - name: StringToLower
          in: query
          schema:
            type: boolean
        - name: PaginateViaPrimaryKey
          in: query
          schema:
            type: boolean
        - name: SortByPrimaryKey
          in: query
          schema:
            type: boolean
        - name: AllowAsyncOverSync
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
  /api/sale/sales:
    get:
      tags:
        - sale
      operationId: api-sale-sales-Get
      parameters:
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_SaleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_SaleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_SaleDto'
  /api/sale/sale:
    post:
      tags:
        - sale
      operationId: api-sale-sale-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSaleDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSaleDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSaleDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateSaleDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SaleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SaleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SaleDto'
  /api/sale/sale-status/{saleid}/{status}:
    put:
      tags:
        - sale
      operationId: api-sale-sale-status-saleid--status-Put
      parameters:
        - name: saleid
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SaleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SaleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SaleDto'
  /api/sale/sale/{id}:
    get:
      tags:
        - sale
      operationId: api-sale-sale-id-Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SaleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SaleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_SaleDto'
  /api/sale/item-sale-quantity/{itemsaleid}/{quantity}:
    put:
      tags:
        - sale
      operationId: api-sale-item-sale-quantity-itemsaleid--quantity-Put
      parameters:
        - name: itemsaleid
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: quantity
          in: path
          required: true
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_ItemSaleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_ItemSaleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_ItemSaleDto'
  /api/rbac/change-password:
    post:
      tags:
        - rbac
      operationId: api-rbac-change-password-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordInput'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordInput'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangePasswordInput'
          text/plain:
            schema:
              $ref: '#/components/schemas/ChangePasswordInput'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
  /api/rbac/user/{id}:
    delete:
      tags:
        - rbac
      operationId: api-rbac-user-id-Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
    put:
      tags:
        - rbac
      operationId: api-rbac-user-id-Put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
  /api/rbac/user:
    post:
      tags:
        - rbac
      operationId: api-rbac-user-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_UserDto'
  /api/rbac/login:
    post:
      tags:
        - rbac
      operationId: api-rbac-login-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginInput'
          text/plain:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoginOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoginOutput'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoginOutput'
  /api/rbac/view-roles:
    post:
      tags:
        - rbac
      operationId: api-rbac-view-roles-Post
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_RoleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_RoleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_RoleDto'
  /api/rbac/view-securies:
    post:
      tags:
        - rbac
      operationId: api-rbac-view-securies-Post
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_SecurityDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_SecurityDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_SecurityDto'
  /api/rbac/roles:
    get:
      tags:
        - rbac
      operationId: api-rbac-roles-Get
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_RoleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_RoleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_RoleDto'
  /api/rbac/role:
    post:
      tags:
        - rbac
      operationId: api-rbac-role-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleInput'
          text/json:
            schema:
              $ref: '#/components/schemas/RoleInput'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RoleInput'
          text/plain:
            schema:
              $ref: '#/components/schemas/RoleInput'
      responses:
        '200':
          description: Success
  /api/rbac/give-user-role:
    post:
      tags:
        - rbac
      operationId: api-rbac-give-user-role-Post
      parameters:
        - name: roleids
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: Success
  /api/rbac/users:
    get:
      tags:
        - rbac
      operationId: api-rbac-users-Get
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_UserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_UserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_UserDto'
  /api/rbac/securities:
    get:
      tags:
        - rbac
      operationId: api-rbac-securities-Get
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_SecurityDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_SecurityDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_List_SecurityDto'
  /api/rbac/give-role-security/{roleid}:
    post:
      tags:
        - rbac
      operationId: api-rbac-give-role-security-roleid-Post
      parameters:
        - name: roleid
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: securityids
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: Success
  /api/order/orders-for-grid:
    get:
      tags:
        - order
      operationId: api-order-orders-for-grid-Get
      parameters:
        - name: RequireTotalCount
          in: query
          schema:
            type: boolean
        - name: RequireGroupCount
          in: query
          schema:
            type: boolean
        - name: IsCountQuery
          in: query
          schema:
            type: boolean
        - name: IsSummaryQuery
          in: query
          schema:
            type: boolean
        - name: Skip
          in: query
          schema:
            type: integer
            format: int32
        - name: Take
          in: query
          schema:
            type: integer
            format: int32
        - name: Sort
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortingInfo'
        - name: Group
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GroupingInfo'
        - name: Filter
          in: query
          schema:
            type: array
            items:
              additionalProperties: false
        - name: TotalSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: GroupSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: Select
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PreSelect
          in: query
          schema:
            type: array
            items:
              type: string
        - name: RemoteSelect
          in: query
          schema:
            type: boolean
        - name: RemoteGrouping
          in: query
          schema:
            type: boolean
        - name: ExpandLinqSumType
          in: query
          schema:
            type: boolean
        - name: PrimaryKey
          in: query
          schema:
            type: array
            items:
              type: string
        - name: DefaultSort
          in: query
          schema:
            type: string
        - name: StringToLower
          in: query
          schema:
            type: boolean
        - name: PaginateViaPrimaryKey
          in: query
          schema:
            type: boolean
        - name: SortByPrimaryKey
          in: query
          schema:
            type: boolean
        - name: AllowAsyncOverSync
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_Object'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_Object'
  /api/order/orders:
    get:
      tags:
        - order
      operationId: api-order-orders-Get
      parameters:
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_OrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_OrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_OrderDto'
  /api/order/order:
    post:
      tags:
        - order
      operationId: api-order-order-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderDto'
  /api/order/order-status/{orderid}/{status}:
    put:
      tags:
        - order
      operationId: api-order-order-status-orderid--status-Put
      parameters:
        - name: orderid
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderDto'
  /api/order/order/{id}:
    get:
      tags:
        - order
      operationId: api-order-order-id-Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderDto'
  /api/order/item-order-quantity/{itemorderid}/{quantity}:
    put:
      tags:
        - order
      operationId: api-order-item-order-quantity-itemorderid--quantity-Put
      parameters:
        - name: itemorderid
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: quantity
          in: path
          required: true
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_ItemOrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_ItemOrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_ItemOrderDto'
  /api/order-return/order-returns:
    get:
      tags:
        - order-return
      operationId: api-order-return-order-returns-Get
      parameters:
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_OrderReturnDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_OrderReturnDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_OrderReturnDto'
  /api/order-return/order-return:
    post:
      tags:
        - order-return
      operationId: api-order-return-order-return-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderReturnDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrderReturnDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrderReturnDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateOrderReturnDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderReturnDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderReturnDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderReturnDto'
  /api/order-return/order-returns-for-grid:
    get:
      tags:
        - order-return
      operationId: api-order-return-order-returns-for-grid-Get
      parameters:
        - name: RequireTotalCount
          in: query
          schema:
            type: boolean
        - name: RequireGroupCount
          in: query
          schema:
            type: boolean
        - name: IsCountQuery
          in: query
          schema:
            type: boolean
        - name: IsSummaryQuery
          in: query
          schema:
            type: boolean
        - name: Skip
          in: query
          schema:
            type: integer
            format: int32
        - name: Take
          in: query
          schema:
            type: integer
            format: int32
        - name: Sort
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortingInfo'
        - name: Group
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GroupingInfo'
        - name: Filter
          in: query
          schema:
            type: array
            items:
              additionalProperties: false
        - name: TotalSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: GroupSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: Select
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PreSelect
          in: query
          schema:
            type: array
            items:
              type: string
        - name: RemoteSelect
          in: query
          schema:
            type: boolean
        - name: RemoteGrouping
          in: query
          schema:
            type: boolean
        - name: ExpandLinqSumType
          in: query
          schema:
            type: boolean
        - name: PrimaryKey
          in: query
          schema:
            type: array
            items:
              type: string
        - name: DefaultSort
          in: query
          schema:
            type: string
        - name: StringToLower
          in: query
          schema:
            type: boolean
        - name: PaginateViaPrimaryKey
          in: query
          schema:
            type: boolean
        - name: SortByPrimaryKey
          in: query
          schema:
            type: boolean
        - name: AllowAsyncOverSync
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
  /api/order-return/order-return/{id}:
    get:
      tags:
        - order-return
      operationId: api-order-return-order-return-id-Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderReturnDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderReturnDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_OrderReturnDto'
  /api/item/items-for-grid:
    get:
      tags:
        - item
      operationId: api-item-items-for-grid-Get
      parameters:
        - name: RequireTotalCount
          in: query
          schema:
            type: boolean
        - name: RequireGroupCount
          in: query
          schema:
            type: boolean
        - name: IsCountQuery
          in: query
          schema:
            type: boolean
        - name: IsSummaryQuery
          in: query
          schema:
            type: boolean
        - name: Skip
          in: query
          schema:
            type: integer
            format: int32
        - name: Take
          in: query
          schema:
            type: integer
            format: int32
        - name: Sort
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortingInfo'
        - name: Group
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GroupingInfo'
        - name: Filter
          in: query
          schema:
            type: array
            items:
              additionalProperties: false
        - name: TotalSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: GroupSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: Select
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PreSelect
          in: query
          schema:
            type: array
            items:
              type: string
        - name: RemoteSelect
          in: query
          schema:
            type: boolean
        - name: RemoteGrouping
          in: query
          schema:
            type: boolean
        - name: ExpandLinqSumType
          in: query
          schema:
            type: boolean
        - name: PrimaryKey
          in: query
          schema:
            type: array
            items:
              type: string
        - name: DefaultSort
          in: query
          schema:
            type: string
        - name: StringToLower
          in: query
          schema:
            type: boolean
        - name: PaginateViaPrimaryKey
          in: query
          schema:
            type: boolean
        - name: SortByPrimaryKey
          in: query
          schema:
            type: boolean
        - name: AllowAsyncOverSync
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
  /api/item/items:
    get:
      tags:
        - item
      operationId: api-item-items-Get
      parameters:
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_ItemSimpleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_ItemSimpleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_ItemSimpleDto'
  /api/item/item-by-id/{id}:
    get:
      tags:
        - item
      operationId: api-item-item-by-id-id-Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_ItemSimpleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_ItemSimpleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_ItemSimpleDto'
  /api/item/item:
    post:
      tags:
        - item
      operationId: api-item-item-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItemDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateItemDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateItemDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateItemDto'
      responses:
        '200':
          description: Success
  /api/item/item/{id}:
    put:
      tags:
        - item
      operationId: api-item-item-id-Put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateItemDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateItemDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/UpdateItemDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - item
      operationId: api-item-item-id-Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
  /api/item/item-batch:
    post:
      tags:
        - item
      operationId: api-item-item-batch-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItemBatchDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateItemBatchDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateItemBatchDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateItemBatchDto'
      responses:
        '200':
          description: Success
  /api/item/item-batch/{id}:
    delete:
      tags:
        - item
      operationId: api-item-item-batch-id-Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
  /api/customer/customers-for-grid:
    get:
      tags:
        - customer
      operationId: api-customer-customers-for-grid-Get
      parameters:
        - name: RequireTotalCount
          in: query
          schema:
            type: boolean
        - name: RequireGroupCount
          in: query
          schema:
            type: boolean
        - name: IsCountQuery
          in: query
          schema:
            type: boolean
        - name: IsSummaryQuery
          in: query
          schema:
            type: boolean
        - name: Skip
          in: query
          schema:
            type: integer
            format: int32
        - name: Take
          in: query
          schema:
            type: integer
            format: int32
        - name: Sort
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortingInfo'
        - name: Group
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GroupingInfo'
        - name: Filter
          in: query
          schema:
            type: array
            items:
              additionalProperties: false
        - name: TotalSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: GroupSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: Select
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PreSelect
          in: query
          schema:
            type: array
            items:
              type: string
        - name: RemoteSelect
          in: query
          schema:
            type: boolean
        - name: RemoteGrouping
          in: query
          schema:
            type: boolean
        - name: ExpandLinqSumType
          in: query
          schema:
            type: boolean
        - name: PrimaryKey
          in: query
          schema:
            type: array
            items:
              type: string
        - name: DefaultSort
          in: query
          schema:
            type: string
        - name: StringToLower
          in: query
          schema:
            type: boolean
        - name: PaginateViaPrimaryKey
          in: query
          schema:
            type: boolean
        - name: SortByPrimaryKey
          in: query
          schema:
            type: boolean
        - name: AllowAsyncOverSync
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
  /api/customer/customers:
    get:
      tags:
        - customer
      operationId: api-customer-customers-Get
      parameters:
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_CustomerDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_CustomerDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_CustomerDto'
  /api/customer/customer:
    post:
      tags:
        - customer
      operationId: api-customer-customer-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCustomerDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateCustomerDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
  /api/customer/customer/{id}:
    put:
      tags:
        - customer
      operationId: api-customer-customer-id-Put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/UpdateCustomerDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
    delete:
      tags:
        - customer
      operationId: api-customer-customer-id-Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
    get:
      tags:
        - customer
      operationId: api-customer-customer-id-Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CustomerDto'
  /api/category-item/category-items-for-grid:
    get:
      tags:
        - category-item
      operationId: api-category-item-category-items-for-grid-Get
      parameters:
        - name: RequireTotalCount
          in: query
          schema:
            type: boolean
        - name: RequireGroupCount
          in: query
          schema:
            type: boolean
        - name: IsCountQuery
          in: query
          schema:
            type: boolean
        - name: IsSummaryQuery
          in: query
          schema:
            type: boolean
        - name: Skip
          in: query
          schema:
            type: integer
            format: int32
        - name: Take
          in: query
          schema:
            type: integer
            format: int32
        - name: Sort
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortingInfo'
        - name: Group
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GroupingInfo'
        - name: Filter
          in: query
          schema:
            type: array
            items:
              additionalProperties: false
        - name: TotalSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: GroupSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: Select
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PreSelect
          in: query
          schema:
            type: array
            items:
              type: string
        - name: RemoteSelect
          in: query
          schema:
            type: boolean
        - name: RemoteGrouping
          in: query
          schema:
            type: boolean
        - name: ExpandLinqSumType
          in: query
          schema:
            type: boolean
        - name: PrimaryKey
          in: query
          schema:
            type: array
            items:
              type: string
        - name: DefaultSort
          in: query
          schema:
            type: string
        - name: StringToLower
          in: query
          schema:
            type: boolean
        - name: PaginateViaPrimaryKey
          in: query
          schema:
            type: boolean
        - name: SortByPrimaryKey
          in: query
          schema:
            type: boolean
        - name: AllowAsyncOverSync
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
  /api/category-item/category-items:
    get:
      tags:
        - category-item
      operationId: api-category-item-category-items-Get
      parameters:
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_CategoryItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_CategoryItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_CategoryItemDto'
  /api/category-item/category-item:
    post:
      tags:
        - category-item
      operationId: api-category-item-category-item-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryItemDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryItemDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCategoryItemDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateCategoryItemDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
  /api/category-item/category-item/{id}:
    put:
      tags:
        - category-item
      operationId: api-category-item-category-item-id-Put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryItemDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryItemDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryItemDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/UpdateCategoryItemDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
    delete:
      tags:
        - category-item
      operationId: api-category-item-category-item-id-Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
    get:
      tags:
        - category-item
      operationId: api-category-item-category-item-id-Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_CategoryItemDto'
  /api/brand/brands:
    get:
      tags:
        - brand
      summary: Retrieves paginated brands based on the provided parameters.
      operationId: api-brand-brands-Get
      parameters:
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_BrandSimpleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_BrandSimpleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_BrandSimpleDto'
  /api/brand/download-brand-pdf/{userid}:
    post:
      tags:
        - brand
      summary: Downloads a PDF file containing brands.
      operationId: api-brand-download-brand-pdf-userid-Post
      parameters:
        - name: userid
          in: path
          description: The ID of the user.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
  /api/brand/download-brand-excel:
    post:
      tags:
        - brand
      summary: Downloads an Excel file containing brands.
      operationId: api-brand-download-brand-excel-Post
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
  /api/brand/brand:
    post:
      tags:
        - brand
      summary: Creates a new brand.
      operationId: api-brand-brand-Post
      requestBody:
        description: The brand to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBrandDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateBrandDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateBrandDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateBrandDto'
      responses:
        '200':
          description: Success
  /api/brand/brand/{id}:
    put:
      tags:
        - brand
      summary: Updates an existing brand.
      operationId: api-brand-brand-id-Put
      parameters:
        - name: id
          in: path
          description: The ID of the brand to be updated.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: The updated brand data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBrandDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateBrandDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateBrandDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/UpdateBrandDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - brand
      summary: Deletes a brand.
      operationId: api-brand-brand-id-Delete
      parameters:
        - name: id
          in: path
          description: The ID of the brand to be deleted.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
    get:
      tags:
        - brand
      summary: Retrieves a brand by its ID.
      operationId: api-brand-brand-id-Get
      parameters:
        - name: id
          in: path
          description: The ID of the brand to be retrieved.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_BrandSimpleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_BrandSimpleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_BrandSimpleDto'
  /api/base-unit/base-units:
    get:
      tags:
        - base-unit
      operationId: api-base-unit-base-units-Get
      parameters:
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_BaseUnitSimpleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_BaseUnitSimpleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResponse_BaseUnitSimpleDto'
  /api/base-unit/base-unit/{id}:
    put:
      tags:
        - base-unit
      operationId: api-base-unit-base-unit-id-Put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBaseUnitDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateBaseUnitDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateBaseUnitDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/UpdateBaseUnitDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - base-unit
      operationId: api-base-unit-base-unit-id-Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
    get:
      tags:
        - base-unit
      operationId: api-base-unit-base-unit-id-Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_BaseUnitSimpleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_BaseUnitSimpleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_BaseUnitSimpleDto'
  /api/base-unit/base-unit:
    post:
      tags:
        - base-unit
      operationId: api-base-unit-base-unit-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBaseUnitDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateBaseUnitDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateBaseUnitDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateBaseUnitDto'
      responses:
        '200':
          description: Success
  /api/base-unit/download-base-unit-excel:
    post:
      tags:
        - base-unit
      operationId: api-base-unit-download-base-unit-excel-Post
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
  /api/base-unit/download-base-unit-pdf/{userid}:
    post:
      tags:
        - base-unit
      operationId: api-base-unit-download-base-unit-pdf-userid-Post
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_IActionResult'
  /api/adjustments/adjustments-for-grid:
    get:
      tags:
        - adjustments
      operationId: api-adjustments-adjustments-for-grid-Get
      parameters:
        - name: RequireTotalCount
          in: query
          schema:
            type: boolean
        - name: RequireGroupCount
          in: query
          schema:
            type: boolean
        - name: IsCountQuery
          in: query
          schema:
            type: boolean
        - name: IsSummaryQuery
          in: query
          schema:
            type: boolean
        - name: Skip
          in: query
          schema:
            type: integer
            format: int32
        - name: Take
          in: query
          schema:
            type: integer
            format: int32
        - name: Sort
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SortingInfo'
        - name: Group
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GroupingInfo'
        - name: Filter
          in: query
          schema:
            type: array
            items:
              additionalProperties: false
        - name: TotalSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: GroupSummary
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummaryInfo'
        - name: Select
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PreSelect
          in: query
          schema:
            type: array
            items:
              type: string
        - name: RemoteSelect
          in: query
          schema:
            type: boolean
        - name: RemoteGrouping
          in: query
          schema:
            type: boolean
        - name: ExpandLinqSumType
          in: query
          schema:
            type: boolean
        - name: PrimaryKey
          in: query
          schema:
            type: array
            items:
              type: string
        - name: DefaultSort
          in: query
          schema:
            type: string
        - name: StringToLower
          in: query
          schema:
            type: boolean
        - name: PaginateViaPrimaryKey
          in: query
          schema:
            type: boolean
        - name: SortByPrimaryKey
          in: query
          schema:
            type: boolean
        - name: AllowAsyncOverSync
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_LoadResult'
  /api/adjustments/adjustments:
    get:
      tags:
        - adjustments
      operationId: api-adjustments-adjustments-Get
      parameters:
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: ColumnValue
          in: query
          schema:
            type: string
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: OrderDirection
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_AdjustmentDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_AdjustmentDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_PaginatedResult_AdjustmentDto'
  /api/adjustments/adjustment:
    post:
      tags:
        - adjustments
      operationId: api-adjustments-adjustment-Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdjustmentDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAdjustmentDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAdjustmentDto'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateAdjustmentDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_AdjustmentDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_AdjustmentDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_AdjustmentDto'
  /api/adjustments/adjustment/{id}:
    get:
      tags:
        - adjustments
      operationId: api-adjustments-adjustment-id-Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RESTfulResult_AdjustmentDto'
            application/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_AdjustmentDto'
            text/json:
              schema:
                $ref: '#/components/schemas/RESTfulResult_AdjustmentDto'
components:
  schemas:
    Adjustment:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        adjustmentId:
          type: integer
          format: int64
        referenceNumber:
          type: string
          nullable: true
        itemsCount:
          type: number
          format: double
          nullable: true
        totalQuantity:
          type: number
          format: double
          nullable: true
        note:
          type: string
          nullable: true
        itemAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/ItemAdjustment'
          nullable: true
      additionalProperties: false
    AdjustmentDto:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        adjustmentId:
          type: integer
          format: int64
        referenceNumber:
          type: string
          nullable: true
        itemsCount:
          type: number
          format: double
          nullable: true
        totalQuantity:
          type: number
          format: double
          nullable: true
        note:
          type: string
          nullable: true
        itemAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/ItemAdjustmentDto'
          nullable: true
      additionalProperties: false
    BaseUnit:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        baseUnitId:
          type: integer
          format: int64
        code:
          type: string
          nullable: true
      additionalProperties: false
    BaseUnitSimpleDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        baseUnitId:
          type: integer
          format: int64
        code:
          type: string
          nullable: true
      additionalProperties: false
    Brand:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        brandId:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          nullable: true
      additionalProperties: false
    BrandDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        brandId:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemDto'
          nullable: true
      additionalProperties: false
    BrandSimpleDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        brandId:
          type: integer
          format: int64
      additionalProperties: false
    CategoryItem:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        categoryItemId:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          nullable: true
        rowIndex:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    CategoryItemDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        categoryItemId:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemDto'
          nullable: true
      additionalProperties: false
    CategoryItemSimpleDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        categoryItemId:
          type: integer
          format: int64
      additionalProperties: false
    ChangePasswordInput:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        password:
          type: string
          nullable: true
      additionalProperties: false
    CreateAdjustmentDto:
      required:
        - itemAdjustments
        - itemsCount
        - referenceNumber
        - totalQuantity
      type: object
      properties:
        referenceNumber:
          maxLength: 150
          minLength: 1
          type: string
        itemsCount:
          type: number
          format: double
        totalQuantity:
          type: number
          format: double
        note:
          maxLength: 800
          type: string
          nullable: true
        itemAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/CreateItemAdjustmentDto'
      additionalProperties: false
    CreateBaseUnitDto:
      required:
        - code
        - name
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 150
          minLength: 1
          type: string
        code:
          maxLength: 150
          minLength: 1
          type: string
        description:
          maxLength: 800
          type: string
          nullable: true
      additionalProperties: false
    CreateBrandDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        description:
          maxLength: 800
          type: string
          nullable: true
      additionalProperties: false
    CreateCategoryItemDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        description:
          maxLength: 150
          type: string
          nullable: true
      additionalProperties: false
    CreateCustomerDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        companyName:
          maxLength: 150
          type: string
          nullable: true
        nit:
          maxLength: 150
          type: string
          nullable: true
        ci:
          maxLength: 150
          type: string
          nullable: true
        email:
          maxLength: 150
          type: string
          nullable: true
        phone:
          maxLength: 150
          type: string
          nullable: true
        address:
          maxLength: 150
          type: string
          nullable: true
        city:
          maxLength: 150
          type: string
          nullable: true
        state:
          maxLength: 150
          type: string
          nullable: true
        country:
          maxLength: 150
          type: string
          nullable: true
        description:
          maxLength: 800
          type: string
          nullable: true
      additionalProperties: false
    CreateItemAdjustmentDto:
      required:
        - action
        - quantity
      type: object
      properties:
        quantity:
          type: number
          format: double
        action:
          minLength: 1
          type: string
        itemId:
          type: integer
          format: int64
          nullable: true
        itemBatchId:
          type: integer
          format: int64
          nullable: true
        adjustmentId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    CreateItemBatchDto:
      type: object
      properties:
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        itemId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    CreateItemDto:
      required:
        - code
        - cost
        - isBatched
        - name
        - price
        - taxCostMethod
        - taxPriceMethod
        - unitCostId
        - unitPriceId
      type: object
      properties:
        name:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        price:
          type: number
          format: double
        cost:
          type: number
          format: double
        isBatched:
          type: boolean
        taxCostMethod:
          minLength: 1
          type: string
        taxPriceMethod:
          minLength: 1
          type: string
        description:
          type: string
          nullable: true
        categoryItems:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        taxCostId:
          type: integer
          format: int64
          nullable: true
        taxPriceId:
          type: integer
          format: int64
          nullable: true
        brandId:
          type: integer
          format: int64
          nullable: true
        unitPriceId:
          type: integer
          format: int64
        unitCostId:
          type: integer
          format: int64
      additionalProperties: false
    CreateItemForSaleDto:
      type: object
      properties:
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        receivedQuantity:
          type: number
          format: double
          nullable: true
        unitCostNet:
          type: number
          format: double
          nullable: true
        unitPriceNet:
          type: number
          format: double
          nullable: true
        discount:
          type: number
          format: double
          nullable: true
        taxRate:
          type: number
          format: double
          nullable: true
        tax:
          type: number
          format: double
          nullable: true
        total:
          type: number
          format: double
          nullable: true
        orderId:
          type: integer
          format: int64
          nullable: true
        itemOrderId:
          type: integer
          format: int64
          nullable: true
        itemId:
          type: integer
          format: int64
          nullable: true
        itemBatchId:
          type: integer
          format: int64
          nullable: true
        unitCostId:
          type: integer
          format: int64
          nullable: true
        unitPriceId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    CreateItemOrderDto:
      required:
        - discount
        - quantity
        - receivedQuantity
        - tax
        - taxRate
        - total
        - unitCostId
        - unitCostNet
        - unitPriceId
        - unitPriceNet
      type: object
      properties:
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
        receivedQuantity:
          type: number
          format: double
        unitCostNet:
          type: number
          format: double
        unitPriceNet:
          type: number
          format: double
        discount:
          type: number
          format: double
        taxRate:
          type: number
          format: double
        tax:
          type: number
          format: double
        total:
          type: number
          format: double
        itemId:
          type: integer
          format: int64
          nullable: true
        itemBatchId:
          type: integer
          format: int64
          nullable: true
        orderId:
          type: integer
          format: int64
          nullable: true
        unitCostId:
          type: integer
          format: int64
        unitPriceId:
          type: integer
          format: int64
      additionalProperties: false
    CreateOrderDto:
      required:
        - grandTotal
        - itemsCount
        - orderDate
        - orderDiscount
        - orderTax
        - orderTaxRate
        - referenceNumber
        - status
        - supplierId
        - totalCost
        - totalDiscount
        - totalQuantity
        - totalTax
      type: object
      properties:
        orderDate:
          type: string
          format: date-time
        referenceNumber:
          maxLength: 150
          minLength: 1
          type: string
        itemsCount:
          type: number
          format: double
        totalQuantity:
          type: number
          format: double
        totalDiscount:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        totalCost:
          type: number
          format: double
        orderTaxRate:
          type: number
          format: double
        orderTax:
          type: number
          format: double
        orderDiscount:
          type: number
          format: double
        grandTotal:
          type: number
          format: double
        status:
          maxLength: 150
          minLength: 1
          type: string
        note:
          maxLength: 800
          type: string
          nullable: true
        supplierId:
          type: integer
          format: int64
        itemOrders:
          type: array
          items:
            $ref: '#/components/schemas/CreateItemOrderDto'
          nullable: true
      additionalProperties: false
    CreateOrderReturnDto:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
        staffNote:
          maxLength: 800
          type: string
          nullable: true
      additionalProperties: false
    CreateSaleDto:
      required:
        - customerId
        - grandTotal
        - itemsCount
        - orderDiscount
        - orderTax
        - orderTaxRate
        - referenceNumber
        - status
        - totalCost
        - totalDiscount
        - totalQuantity
        - totalTax
      type: object
      properties:
        referenceNumber:
          maxLength: 150
          minLength: 1
          type: string
        itemsCount:
          type: number
          format: double
        totalQuantity:
          type: number
          format: double
        totalDiscount:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        totalCost:
          type: number
          format: double
        orderTaxRate:
          type: number
          format: double
        orderTax:
          type: number
          format: double
        orderDiscount:
          type: number
          format: double
        grandTotal:
          type: number
          format: double
        status:
          maxLength: 150
          minLength: 1
          type: string
        note:
          maxLength: 800
          type: string
          nullable: true
        customerId:
          type: integer
          format: int64
        itemSales:
          type: array
          items:
            $ref: '#/components/schemas/CreateItemForSaleDto'
          nullable: true
      additionalProperties: false
    CreateSupplierDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        companyName:
          maxLength: 150
          type: string
          nullable: true
        nit:
          maxLength: 150
          type: string
          nullable: true
        ci:
          maxLength: 150
          type: string
          nullable: true
        email:
          maxLength: 150
          type: string
          nullable: true
        phone:
          maxLength: 150
          type: string
          nullable: true
        address:
          maxLength: 150
          type: string
          nullable: true
        city:
          maxLength: 150
          type: string
          nullable: true
        state:
          maxLength: 150
          type: string
          nullable: true
        country:
          maxLength: 150
          type: string
          nullable: true
        description:
          maxLength: 800
          type: string
          nullable: true
      additionalProperties: false
    CreateTaxDto:
      required:
        - name
        - rate
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        rate:
          type: number
          format: double
        description:
          maxLength: 800
          type: string
          nullable: true
      additionalProperties: false
    CreateUnitDto:
      required:
        - code
        - name
        - operation
        - value
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        code:
          maxLength: 150
          minLength: 1
          type: string
        operation:
          maxLength: 150
          minLength: 1
          type: string
        value:
          type: number
          format: double
        description:
          maxLength: 800
          type: string
          nullable: true
        baseUnitId:
          type: integer
          format: int64
      additionalProperties: false
    CreateUserDto:
      type: object
      properties:
        account:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    Customer:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        customerId:
          type: integer
          format: int64
        companyName:
          type: string
          nullable: true
        nit:
          type: string
          nullable: true
        ci:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        sales:
          type: array
          items:
            $ref: '#/components/schemas/Sale'
          nullable: true
      additionalProperties: false
    CustomerDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        customerId:
          type: integer
          format: int64
          nullable: true
        companyName:
          type: string
          nullable: true
        nit:
          type: string
          nullable: true
        ci:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        sales:
          type: array
          items:
            $ref: '#/components/schemas/SaleDto'
          nullable: true
      additionalProperties: false
    GroupingInfo:
      type: object
      properties:
        selector:
          type: string
          nullable: true
        desc:
          type: boolean
        groupInterval:
          type: string
          nullable: true
        isExpanded:
          type: boolean
          nullable: true
      additionalProperties: false
    IActionResult:
      type: object
      additionalProperties: false
    Item:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        itemId:
          type: integer
          format: int64
        code:
          type: string
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        cost:
          type: number
          format: double
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        isBatched:
          type: boolean
          nullable: true
        taxCostMethod:
          type: string
          nullable: true
        taxPriceMethod:
          type: string
          nullable: true
        categoryItems:
          type: array
          items:
            $ref: '#/components/schemas/CategoryItem'
          nullable: true
        taxCostId:
          type: integer
          format: int64
          nullable: true
        taxCost:
          $ref: '#/components/schemas/Tax'
        taxPriceId:
          type: integer
          format: int64
          nullable: true
        taxPrice:
          $ref: '#/components/schemas/Tax'
        brandId:
          type: integer
          format: int64
          nullable: true
        brand:
          $ref: '#/components/schemas/Brand'
        unitPriceId:
          type: integer
          format: int64
          nullable: true
        unitPrice:
          $ref: '#/components/schemas/Unit'
        unitCostId:
          type: integer
          format: int64
          nullable: true
        unitCost:
          $ref: '#/components/schemas/Unit'
        itemBatches:
          type: array
          items:
            $ref: '#/components/schemas/ItemBatch'
          nullable: true
        itemOrders:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrder'
          nullable: true
        itemOrderReturns:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrderReturn'
          nullable: true
        itemAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/ItemAdjustment'
          nullable: true
      additionalProperties: false
    ItemAdjustment:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemAdjustmentId:
          type: integer
          format: int64
        quantity:
          type: number
          format: double
          nullable: true
        action:
          type: string
          nullable: true
        itemId:
          type: integer
          format: int64
          nullable: true
        item:
          $ref: '#/components/schemas/Item'
        itemBatchId:
          type: integer
          format: int64
          nullable: true
        itemBatch:
          $ref: '#/components/schemas/ItemBatch'
        adjustmentId:
          type: integer
          format: int64
          nullable: true
        adjustment:
          $ref: '#/components/schemas/Adjustment'
      additionalProperties: false
    ItemAdjustmentDto:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemAdjustmentId:
          type: integer
          format: int64
        quantity:
          type: number
          format: double
          nullable: true
        action:
          type: string
          nullable: true
        item:
          $ref: '#/components/schemas/ItemDto'
        itemBatch:
          $ref: '#/components/schemas/ItemBatchDto'
        adjustment:
          $ref: '#/components/schemas/AdjustmentDto'
      additionalProperties: false
    ItemBatch:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemBatchId:
          type: integer
          format: int64
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        itemId:
          type: integer
          format: int64
          nullable: true
        item:
          $ref: '#/components/schemas/Item'
        itemAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/ItemAdjustment'
          nullable: true
        itemOrders:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrder'
          nullable: true
        itemOrderReturns:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrderReturn'
          nullable: true
      additionalProperties: false
    ItemBatchDto:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemBatchId:
          type: integer
          format: int64
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        item:
          $ref: '#/components/schemas/ItemDto'
        itemAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/ItemAdjustmentDto'
          nullable: true
        itemOrders:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrderDto'
          nullable: true
        itemOrderReturns:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrderReturnDto'
          nullable: true
      additionalProperties: false
    ItemDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        itemId:
          type: integer
          format: int64
          nullable: true
        code:
          type: string
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        cost:
          type: number
          format: double
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        isBatched:
          type: boolean
          nullable: true
        taxCostMethod:
          type: string
          nullable: true
        taxPriceMethod:
          type: string
          nullable: true
        categoryItems:
          type: array
          items:
            $ref: '#/components/schemas/CategoryItemDto'
          nullable: true
        taxCost:
          $ref: '#/components/schemas/TaxDto'
        taxPrice:
          $ref: '#/components/schemas/TaxDto'
        brand:
          $ref: '#/components/schemas/BrandDto'
        unitPrice:
          $ref: '#/components/schemas/UnitDto'
        unitCost:
          $ref: '#/components/schemas/UnitDto'
        itemBatches:
          type: array
          items:
            $ref: '#/components/schemas/ItemBatchDto'
          nullable: true
        itemOrders:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrderDto'
          nullable: true
        itemOrderReturns:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrderReturnDto'
          nullable: true
        itemAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/ItemAdjustmentDto'
          nullable: true
      additionalProperties: false
    ItemForSale:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemForSaleId:
          type: integer
          format: int64
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        receivedQuantity:
          type: number
          format: double
          nullable: true
        unitCostNet:
          type: number
          format: double
          nullable: true
        unitPriceNet:
          type: number
          format: double
          nullable: true
        discount:
          type: number
          format: double
          nullable: true
        taxRate:
          type: number
          format: double
          nullable: true
        tax:
          type: number
          format: double
          nullable: true
        total:
          type: number
          format: double
          nullable: true
        orderId:
          type: integer
          format: int64
          nullable: true
        order:
          $ref: '#/components/schemas/Order'
        itemId:
          type: integer
          format: int64
          nullable: true
        item:
          $ref: '#/components/schemas/Item'
        itemBatchId:
          type: integer
          format: int64
          nullable: true
        itemBatch:
          $ref: '#/components/schemas/ItemBatch'
        unitCostId:
          type: integer
          format: int64
          nullable: true
        unitCost:
          $ref: '#/components/schemas/Unit'
        unitPriceId:
          type: integer
          format: int64
          nullable: true
        unitPrice:
          $ref: '#/components/schemas/Unit'
        itemOrderId:
          type: integer
          format: int64
        itemOrder:
          $ref: '#/components/schemas/ItemOrder'
        itemSales:
          type: array
          items:
            $ref: '#/components/schemas/ItemSale'
          nullable: true
      additionalProperties: false
    ItemForSaleDto:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemForSaleId:
          type: integer
          format: int64
        itemOrder:
          $ref: '#/components/schemas/ItemOrder'
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        receivedQuantity:
          type: number
          format: double
          nullable: true
        unitCostNet:
          type: number
          format: double
          nullable: true
        unitPriceNet:
          type: number
          format: double
          nullable: true
        discount:
          type: number
          format: double
          nullable: true
        taxRate:
          type: number
          format: double
          nullable: true
        tax:
          type: number
          format: double
          nullable: true
        total:
          type: number
          format: double
          nullable: true
        order:
          $ref: '#/components/schemas/OrderDto'
        item:
          $ref: '#/components/schemas/ItemDto'
        itemBatch:
          $ref: '#/components/schemas/ItemBatchDto'
        unitCost:
          $ref: '#/components/schemas/UnitDto'
        unitPrice:
          $ref: '#/components/schemas/UnitDto'
        itemSales:
          type: array
          items:
            $ref: '#/components/schemas/ItemSaleDto'
          nullable: true
      additionalProperties: false
    ItemOrder:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemOrderId:
          type: integer
          format: int64
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        receivedQuantity:
          type: number
          format: double
          nullable: true
        unitCostNet:
          type: number
          format: double
          nullable: true
        unitPriceNet:
          type: number
          format: double
          nullable: true
        discount:
          type: number
          format: double
          nullable: true
        taxRate:
          type: number
          format: double
          nullable: true
        tax:
          type: number
          format: double
          nullable: true
        total:
          type: number
          format: double
          nullable: true
        orderId:
          type: integer
          format: int64
          nullable: true
        order:
          $ref: '#/components/schemas/Order'
        itemId:
          type: integer
          format: int64
          nullable: true
        item:
          $ref: '#/components/schemas/Item'
        itemBatchId:
          type: integer
          format: int64
          nullable: true
        itemBatch:
          $ref: '#/components/schemas/ItemBatch'
        unitCostId:
          type: integer
          format: int64
          nullable: true
        unitCost:
          $ref: '#/components/schemas/Unit'
        unitPriceId:
          type: integer
          format: int64
          nullable: true
        unitPrice:
          $ref: '#/components/schemas/Unit'
      additionalProperties: false
    ItemOrderDto:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemOrderId:
          type: integer
          format: int64
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        receivedQuantity:
          type: number
          format: double
          nullable: true
        unitCostNet:
          type: number
          format: double
          nullable: true
        discount:
          type: number
          format: double
          nullable: true
        taxRate:
          type: number
          format: double
          nullable: true
        tax:
          type: number
          format: double
          nullable: true
        total:
          type: number
          format: double
          nullable: true
        item:
          $ref: '#/components/schemas/ItemDto'
        itemBatch:
          $ref: '#/components/schemas/ItemBatchDto'
        order:
          $ref: '#/components/schemas/OrderDto'
        unitCost:
          $ref: '#/components/schemas/UnitDto'
        unitPrice:
          $ref: '#/components/schemas/UnitDto'
      additionalProperties: false
    ItemOrderReturn:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemOrderReturnId:
          type: integer
          format: int64
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        receivedQuantity:
          type: number
          format: double
          nullable: true
        unitCostNet:
          type: number
          format: double
          nullable: true
        discount:
          type: number
          format: double
          nullable: true
        taxRate:
          type: number
          format: double
          nullable: true
        tax:
          type: number
          format: double
          nullable: true
        total:
          type: number
          format: double
          nullable: true
        orderReturnId:
          type: integer
          format: int64
          nullable: true
        orderReturn:
          $ref: '#/components/schemas/OrderReturn'
        itemId:
          type: integer
          format: int64
          nullable: true
        item:
          $ref: '#/components/schemas/Item'
        itemBatchId:
          type: integer
          format: int64
          nullable: true
        itemBatch:
          $ref: '#/components/schemas/ItemBatch'
        unitCostId:
          type: integer
          format: int64
          nullable: true
        unitCost:
          $ref: '#/components/schemas/Unit'
      additionalProperties: false
    ItemOrderReturnDto:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemOrderReturnId:
          type: integer
          format: int64
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        receivedQuantity:
          type: number
          format: double
          nullable: true
        unitCostNet:
          type: number
          format: double
          nullable: true
        discount:
          type: number
          format: double
          nullable: true
        taxRate:
          type: number
          format: double
          nullable: true
        tax:
          type: number
          format: double
          nullable: true
        total:
          type: number
          format: double
          nullable: true
        item:
          $ref: '#/components/schemas/ItemDto'
        itemBatch:
          $ref: '#/components/schemas/ItemBatchDto'
        orderReturn:
          $ref: '#/components/schemas/OrderReturnDto'
        unitCost:
          $ref: '#/components/schemas/UnitDto'
      additionalProperties: false
    ItemSale:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemSaleId:
          type: integer
          format: int64
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        receivedQuantity:
          type: number
          format: double
          nullable: true
        unitPriceNet:
          type: number
          format: double
          nullable: true
        discount:
          type: number
          format: double
          nullable: true
        taxRate:
          type: number
          format: double
          nullable: true
        tax:
          type: number
          format: double
          nullable: true
        total:
          type: number
          format: double
          nullable: true
        saleId:
          type: integer
          format: int64
          nullable: true
        sale:
          $ref: '#/components/schemas/Sale'
        itemId:
          type: integer
          format: int64
          nullable: true
        item:
          $ref: '#/components/schemas/Item'
        itemBatchId:
          type: integer
          format: int64
          nullable: true
        itemBatch:
          $ref: '#/components/schemas/ItemBatch'
        unitPriceId:
          type: integer
          format: int64
          nullable: true
        unitPrice:
          $ref: '#/components/schemas/Unit'
        itemForSaleId:
          type: integer
          format: int64
          nullable: true
        itemForSale:
          $ref: '#/components/schemas/ItemForSale'
      additionalProperties: false
    ItemSaleDto:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        itemSaleId:
          type: integer
          format: int64
        batchNumber:
          type: string
          nullable: true
        batchDate:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        receivedQuantity:
          type: number
          format: double
          nullable: true
        unitPriceNet:
          type: number
          format: double
          nullable: true
        discount:
          type: number
          format: double
          nullable: true
        taxRate:
          type: number
          format: double
          nullable: true
        tax:
          type: number
          format: double
          nullable: true
        total:
          type: number
          format: double
          nullable: true
        item:
          $ref: '#/components/schemas/ItemDto'
        itemBatch:
          $ref: '#/components/schemas/ItemBatchDto'
        sale:
          $ref: '#/components/schemas/SaleDto'
        unitPrice:
          $ref: '#/components/schemas/UnitDto'
        itemForSale:
          $ref: '#/components/schemas/ItemForSaleDto'
      additionalProperties: false
    ItemSimpleDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        itemId:
          type: integer
          format: int64
          nullable: true
        code:
          type: string
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        cost:
          type: number
          format: double
          nullable: true
        quantity:
          type: number
          format: double
          nullable: true
        isBatched:
          type: boolean
          nullable: true
        taxCostMethod:
          type: string
          nullable: true
        taxPriceMethod:
          type: string
          nullable: true
        categoryItems:
          type: array
          items:
            $ref: '#/components/schemas/CategoryItemSimpleDto'
          nullable: true
        taxCost:
          $ref: '#/components/schemas/TaxSimpleDto'
        taxPrice:
          $ref: '#/components/schemas/TaxSimpleDto'
        brand:
          $ref: '#/components/schemas/BrandSimpleDto'
        unitPrice:
          $ref: '#/components/schemas/UnitSimpleDto'
        unitCost:
          $ref: '#/components/schemas/UnitSimpleDto'
      additionalProperties: false
    LoadResult:
      type: object
      properties:
        data:
          type: array
          items:
            additionalProperties: false
          nullable: true
        totalCount:
          type: integer
          format: int32
          default: -1
        groupCount:
          type: integer
          format: int32
          default: -1
        summary:
          type: array
          items:
            additionalProperties: false
          nullable: true
      additionalProperties: false
    LoginInput:
      required:
        - account
        - password
      type: object
      properties:
        account:
          minLength: 3
          type: string
        password:
          minLength: 5
          type: string
      additionalProperties: false
    LoginOutput:
      required:
        - account
      type: object
      properties:
        userId:
          type: integer
          format: int32
        account:
          minLength: 3
          type: string
        accessToken:
          type: string
          nullable: true
        refreshToken:
          type: string
          nullable: true
        securities:
          type: array
          items:
            $ref: '#/components/schemas/SecurityDto'
          nullable: true
      additionalProperties: false
    MetaData:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        hasPrevious:
          type: boolean
          readOnly: true
        hasNext:
          type: boolean
          readOnly: true
      additionalProperties: false
    Order:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        orderId:
          type: integer
          format: int64
        orderDate:
          type: string
          format: date-time
          nullable: true
        referenceNumber:
          type: string
          nullable: true
        itemsCount:
          type: number
          format: double
          nullable: true
        totalQuantity:
          type: number
          format: double
          nullable: true
        totalDiscount:
          type: number
          format: double
          nullable: true
        totalTax:
          type: number
          format: double
          nullable: true
        totalCost:
          type: number
          format: double
          nullable: true
        orderTaxRate:
          type: number
          format: double
          nullable: true
        orderTax:
          type: number
          format: double
          nullable: true
        orderDiscount:
          type: number
          format: double
          nullable: true
        grandTotal:
          type: number
          format: double
          nullable: true
        status:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        supplierId:
          type: integer
          format: int64
          nullable: true
        supplier:
          $ref: '#/components/schemas/Supplier'
        itemOrders:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrder'
          nullable: true
        itemForSales:
          type: array
          items:
            $ref: '#/components/schemas/ItemForSale'
          nullable: true
      additionalProperties: false
    OrderDto:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        orderId:
          type: integer
          format: int64
        orderDate:
          type: string
          format: date-time
          nullable: true
        referenceNumber:
          type: string
          nullable: true
        itemsCount:
          type: integer
          format: int32
          nullable: true
        totalQuantity:
          type: number
          format: double
          nullable: true
        totalDiscount:
          type: number
          format: double
          nullable: true
        totalTax:
          type: number
          format: double
          nullable: true
        totalCost:
          type: number
          format: double
          nullable: true
        orderTaxRate:
          type: number
          format: double
          nullable: true
        orderTax:
          type: number
          format: double
          nullable: true
        orderDiscount:
          type: number
          format: double
          nullable: true
        grandTotal:
          type: number
          format: double
          nullable: true
        status:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        supplierId:
          type: integer
          format: int64
          nullable: true
        supplier:
          $ref: '#/components/schemas/SupplierDto'
        itemOrders:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrderDto'
          nullable: true
      additionalProperties: false
    OrderReturn:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        orderReturnId:
          type: integer
          format: int64
        referenceNumber:
          type: string
          nullable: true
        itemsCount:
          type: number
          format: double
          nullable: true
        totalQuantity:
          type: number
          format: double
          nullable: true
        totalDiscount:
          type: number
          format: double
          nullable: true
        totalTax:
          type: number
          format: double
          nullable: true
        totalCost:
          type: number
          format: double
          nullable: true
        orderTaxRate:
          type: number
          format: double
          nullable: true
        orderTax:
          type: number
          format: double
          nullable: true
        orderDiscount:
          type: number
          format: double
          nullable: true
        grandTotal:
          type: number
          format: double
          nullable: true
        status:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        staffNote:
          type: string
          nullable: true
        supplierId:
          type: integer
          format: int64
          nullable: true
        supplier:
          $ref: '#/components/schemas/Supplier'
        itemOrderReturns:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrderReturn'
          nullable: true
      additionalProperties: false
    OrderReturnDto:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        orderReturnId:
          type: integer
          format: int64
        referenceNumber:
          type: string
          nullable: true
        itemsCount:
          type: integer
          format: int32
          nullable: true
        totalQuantity:
          type: number
          format: double
          nullable: true
        totalDiscount:
          type: number
          format: double
          nullable: true
        totalTax:
          type: number
          format: double
          nullable: true
        totalCost:
          type: number
          format: double
          nullable: true
        orderTaxRate:
          type: number
          format: double
          nullable: true
        orderTax:
          type: number
          format: double
          nullable: true
        orderDiscount:
          type: number
          format: double
          nullable: true
        grandTotal:
          type: number
          format: double
          nullable: true
        status:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        staffNote:
          type: string
          nullable: true
        supplier:
          $ref: '#/components/schemas/SupplierDto'
        itemOrderReturns:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrderReturnDto'
          nullable: true
      additionalProperties: false
    PaginatedResponse_BaseUnitSimpleDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalNumber:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/BaseUnitSimpleDto'
          nullable: true
      additionalProperties: false
    PaginatedResponse_BrandSimpleDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalNumber:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/BrandSimpleDto'
          nullable: true
      additionalProperties: false
    PaginatedResponse_ItemSimpleDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalNumber:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemSimpleDto'
          nullable: true
      additionalProperties: false
    PaginatedResponse_TaxSimpleDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalNumber:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/TaxSimpleDto'
          nullable: true
      additionalProperties: false
    PaginatedResponse_UnitDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalNumber:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/UnitDto'
          nullable: true
      additionalProperties: false
    PaginatedResult_AdjustmentDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdjustmentDto'
          nullable: true
        metaData:
          $ref: '#/components/schemas/MetaData'
      additionalProperties: false
    PaginatedResult_CategoryItemDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CategoryItemDto'
          nullable: true
        metaData:
          $ref: '#/components/schemas/MetaData'
      additionalProperties: false
    PaginatedResult_CustomerDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CustomerDto'
          nullable: true
        metaData:
          $ref: '#/components/schemas/MetaData'
      additionalProperties: false
    PaginatedResult_OrderDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderDto'
          nullable: true
        metaData:
          $ref: '#/components/schemas/MetaData'
      additionalProperties: false
    PaginatedResult_OrderReturnDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderReturnDto'
          nullable: true
        metaData:
          $ref: '#/components/schemas/MetaData'
      additionalProperties: false
    PaginatedResult_SaleDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SaleDto'
          nullable: true
        metaData:
          $ref: '#/components/schemas/MetaData'
      additionalProperties: false
    PaginatedResult_SupplierDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SupplierDto'
          nullable: true
        metaData:
          $ref: '#/components/schemas/MetaData'
      additionalProperties: false
    RESTfulResult_AdjustmentDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/AdjustmentDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_BaseUnitSimpleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/BaseUnitSimpleDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_BrandSimpleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/BrandSimpleDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_CategoryItemDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/CategoryItemDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_CustomerDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/CustomerDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_IActionResult:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/IActionResult'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_ItemOrderDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/ItemOrderDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_ItemSaleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/ItemSaleDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_ItemSimpleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/ItemSimpleDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_List_RoleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/RoleDto'
          nullable: true
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_List_SecurityDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/SecurityDto'
          nullable: true
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_List_UserDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserDto'
          nullable: true
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_LoadResult:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/LoadResult'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_LoginOutput:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/LoginOutput'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_Object:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          additionalProperties: false
          nullable: true
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_OrderDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/OrderDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_OrderReturnDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/OrderReturnDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResponse_BaseUnitSimpleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResponse_BaseUnitSimpleDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResponse_BrandSimpleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResponse_BrandSimpleDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResponse_ItemSimpleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResponse_ItemSimpleDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResponse_TaxSimpleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResponse_TaxSimpleDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResponse_UnitDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResponse_UnitDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResult_AdjustmentDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResult_AdjustmentDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResult_CategoryItemDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResult_CategoryItemDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResult_CustomerDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResult_CustomerDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResult_OrderDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResult_OrderDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResult_OrderReturnDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResult_OrderReturnDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResult_SaleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResult_SaleDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_PaginatedResult_SupplierDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/PaginatedResult_SupplierDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_SaleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/SaleDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_String:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          type: string
          nullable: true
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_SupplierDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/SupplierDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_TaxSimpleDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/TaxSimpleDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_UnitDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/UnitDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RESTfulResult_UserDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          nullable: true
        data:
          $ref: '#/components/schemas/UserDto'
        succeeded:
          type: boolean
        errors:
          additionalProperties: false
          nullable: true
        extras:
          additionalProperties: false
          nullable: true
        timestamp:
          type: integer
          format: int64
      additionalProperties: false
    RoleDto:
      type: object
      properties:
        roleId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        remark:
          type: string
          nullable: true
      additionalProperties: false
    RoleInput:
      type: object
      properties:
        name:
          type: string
          nullable: true
        remark:
          type: string
          nullable: true
      additionalProperties: false
    Sale:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        saleId:
          type: integer
          format: int64
        referenceNumber:
          type: string
          nullable: true
        itemsCount:
          type: number
          format: double
          nullable: true
        totalQuantity:
          type: number
          format: double
          nullable: true
        totalDiscount:
          type: number
          format: double
          nullable: true
        totalTax:
          type: number
          format: double
          nullable: true
        totalCost:
          type: number
          format: double
          nullable: true
        orderTaxRate:
          type: number
          format: double
          nullable: true
        orderTax:
          type: number
          format: double
          nullable: true
        orderDiscount:
          type: number
          format: double
          nullable: true
        grandTotal:
          type: number
          format: double
          nullable: true
        status:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        customerId:
          type: integer
          format: int64
          nullable: true
        customer:
          $ref: '#/components/schemas/Customer'
        itemSales:
          type: array
          items:
            $ref: '#/components/schemas/ItemSale'
          nullable: true
      additionalProperties: false
    SaleDto:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        saleId:
          type: integer
          format: int64
        referenceNumber:
          type: string
          nullable: true
        itemsCount:
          type: integer
          format: int32
          nullable: true
        totalQuantity:
          type: number
          format: double
          nullable: true
        totalDiscount:
          type: number
          format: double
          nullable: true
        totalTax:
          type: number
          format: double
          nullable: true
        totalCost:
          type: number
          format: double
          nullable: true
        orderTaxRate:
          type: number
          format: double
          nullable: true
        orderTax:
          type: number
          format: double
          nullable: true
        orderDiscount:
          type: number
          format: double
          nullable: true
        grandTotal:
          type: number
          format: double
          nullable: true
        status:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        customerId:
          type: integer
          format: int64
          nullable: true
        customer:
          $ref: '#/components/schemas/CustomerDto'
        itemSales:
          type: array
          items:
            $ref: '#/components/schemas/ItemSaleDto'
          nullable: true
      additionalProperties: false
    SecurityDto:
      type: object
      properties:
        securityId:
          type: integer
          format: int32
        uniqueName:
          type: string
          nullable: true
      additionalProperties: false
    SortingInfo:
      type: object
      properties:
        selector:
          type: string
          nullable: true
        desc:
          type: boolean
      additionalProperties: false
    SummaryInfo:
      type: object
      properties:
        selector:
          type: string
          nullable: true
        summaryType:
          type: string
          nullable: true
      additionalProperties: false
    Supplier:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        supplierId:
          type: integer
          format: int64
        companyName:
          type: string
          nullable: true
        nit:
          type: string
          nullable: true
        ci:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
          nullable: true
        orderReturns:
          type: array
          items:
            $ref: '#/components/schemas/OrderReturn'
          nullable: true
      additionalProperties: false
    SupplierDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        supplierId:
          type: integer
          format: int64
          nullable: true
        companyName:
          type: string
          nullable: true
        nit:
          type: string
          nullable: true
        ci:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderDto'
          nullable: true
        orderReturns:
          type: array
          items:
            $ref: '#/components/schemas/OrderReturnDto'
          nullable: true
      additionalProperties: false
    Tax:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        taxId:
          type: integer
          format: int64
        rate:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    TaxDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        taxId:
          type: integer
          format: int64
        rate:
          type: number
          format: double
      additionalProperties: false
    TaxSimpleDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        taxId:
          type: integer
          format: int64
        rate:
          type: number
          format: double
      additionalProperties: false
    Unit:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        unitId:
          type: integer
          format: int64
        code:
          type: string
          nullable: true
        operation:
          type: string
          nullable: true
        value:
          type: number
          format: double
          nullable: true
        baseUnitId:
          type: integer
          format: int64
          nullable: true
        baseUnit:
          $ref: '#/components/schemas/BaseUnit'
      additionalProperties: false
    UnitDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        unitId:
          type: integer
          format: int64
        code:
          type: string
          nullable: true
        operation:
          type: string
          nullable: true
        value:
          type: number
          format: double
        baseUnit:
          $ref: '#/components/schemas/BaseUnitSimpleDto'
      additionalProperties: false
    UnitSimpleDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        unitId:
          type: integer
          format: int64
        code:
          type: string
          nullable: true
        operation:
          type: string
          nullable: true
        value:
          type: number
          format: double
        baseUnitId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    UpdateBaseUnitDto:
      required:
        - code
        - name
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 150
          minLength: 1
          type: string
        code:
          maxLength: 150
          minLength: 1
          type: string
        description:
          maxLength: 800
          type: string
          nullable: true
      additionalProperties: false
    UpdateBrandDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        description:
          maxLength: 800
          type: string
          nullable: true
      additionalProperties: false
    UpdateCategoryItemDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        description:
          maxLength: 150
          type: string
          nullable: true
      additionalProperties: false
    UpdateCustomerDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        companyName:
          maxLength: 150
          type: string
          nullable: true
        nit:
          maxLength: 150
          type: string
          nullable: true
        ci:
          maxLength: 150
          type: string
          nullable: true
        email:
          maxLength: 150
          type: string
          nullable: true
        phone:
          maxLength: 150
          type: string
          nullable: true
        address:
          maxLength: 150
          type: string
          nullable: true
        city:
          maxLength: 150
          type: string
          nullable: true
        state:
          maxLength: 150
          type: string
          nullable: true
        country:
          maxLength: 150
          type: string
          nullable: true
        description:
          maxLength: 800
          type: string
          nullable: true
      additionalProperties: false
    UpdateItemDto:
      required:
        - code
        - cost
        - isBatched
        - name
        - price
        - taxCostMethod
        - taxPriceMethod
        - unitCostId
        - unitPriceId
      type: object
      properties:
        name:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        price:
          type: number
          format: double
        cost:
          type: number
          format: double
        isBatched:
          type: boolean
        taxCostMethod:
          minLength: 1
          type: string
        taxPriceMethod:
          minLength: 1
          type: string
        description:
          type: string
          nullable: true
        categoryItems:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        taxCostId:
          type: integer
          format: int64
          nullable: true
        taxPriceId:
          type: integer
          format: int64
          nullable: true
        brandId:
          type: integer
          format: int64
          nullable: true
        unitPriceId:
          type: integer
          format: int64
        unitCostId:
          type: integer
          format: int64
      additionalProperties: false
    UpdateSupplierDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        companyName:
          maxLength: 150
          type: string
          nullable: true
        nit:
          maxLength: 150
          type: string
          nullable: true
        ci:
          maxLength: 150
          type: string
          nullable: true
        email:
          maxLength: 150
          type: string
          nullable: true
        phone:
          maxLength: 150
          type: string
          nullable: true
        address:
          maxLength: 150
          type: string
          nullable: true
        city:
          maxLength: 150
          type: string
          nullable: true
        state:
          maxLength: 150
          type: string
          nullable: true
        country:
          maxLength: 150
          type: string
          nullable: true
        description:
          maxLength: 800
          type: string
          nullable: true
      additionalProperties: false
    UpdateTaxDto:
      required:
        - name
        - rate
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        rate:
          type: number
          format: double
        description:
          maxLength: 800
          type: string
          nullable: true
      additionalProperties: false
    UpdateUnitDto:
      required:
        - code
        - name
        - operation
        - value
      type: object
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        code:
          maxLength: 150
          minLength: 1
          type: string
        operation:
          maxLength: 150
          minLength: 1
          type: string
        value:
          type: number
          format: double
        description:
          maxLength: 800
          type: string
          nullable: true
        baseUnitId:
          type: integer
          format: int64
      additionalProperties: false
    UpdateUserDto:
      type: object
      properties:
        account:
          type: string
          nullable: true
      additionalProperties: false
    UserDto:
      type: object
      properties:
        isDeleted:
          type: boolean
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          type: integer
          format: int64
          nullable: true
        userId:
          type: integer
          format: int64
        account:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: JWT Authorization header using the Bearer scheme.
      scheme: bearer
      bearerFormat: JWT
security:
  - Bearer: []
tags:
  - name: adjustments
  - name: base-unit
  - name: brand
    description: Represents a Brand Application Service in the CRM API.
  - name: category-item
  - name: customer
  - name: init-system
  - name: item
  - name: order
  - name: order-return
  - name: rbac
  - name: sale
  - name: supplier
  - name: system
    description: 系统服务接口
  - name: tax
  - name: unit
    description: Represents a service for managing units in the CRM application.
